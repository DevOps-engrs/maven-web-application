pipeline
{
    
agent any

tools{
maven "maven3.8.5"    
}

triggers {
  pollSCM ('* * * * *')
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')

     timestamps()
}

stages{
stage('CheckoutCode')
{
steps{
notifyBuild('STARTED')    
git branch: 'development', credentialsId: '9502baba-1451-47e4-9f86-ecdca4d2d5e8', url: 'https://github.com/DevOps-engrs/maven-web-application.git'    
}     
}

stage('Build')
{
steps {sh "mvn clean package"}    
}

stage('ExecuteSonarQubeReport')
{
steps{sh "mvn sonar:sonar"}    
}

stage('UploadArtifactsIntoNexus')
{
steps {sh "mvn deploy"}    
}

stage('DeployAppIntoTomcatServer')
{
steps{sshagent(['e34920af-f791-4f70-898f-0825ff450672']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@43.204.28.163:/opt/apache-tomcat-9.0.63/webapps"
} 
}    
}


}//stages closing

post {

  success {
    // One or more steps need to be included within each condition's block.
  notifyBuild('SUCCESSFUL')
  }
  failure {
    // One or more steps need to be included within each condition's block.
  notifyBuild('FAILURE')
  }
 
}

}//pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'facebook')
}
